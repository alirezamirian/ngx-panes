@import 'scss/functions/pick-visible-color';

@function decimalize($value) {
  @if (unit($value) == '%') {
    @return $value/100%;
  }
  @return $value;
}

@mixin ngx-panes-theme($options: ()) {
  @if (map_has_key($options, primaryColor) == false) {
    @error ('primaryColor is necessary to create an ngx-panes theme');
  }
  @if (map_has_key($options, backgroundColor) == false) {
    @error ('bakgroundColor is necessary to create an ngx-panes theme');
  }
  $primaryColor: map_get($options, primaryColor);
  $backgroundColor: map_get($options, backgroundColor);

  $options: map-merge((
    primaryColor: #eee,
    backgroundColor: #fff,
    tabsContrast: 3%,
    headerContrast: 5%,
    borderContrast: 20%,
    lightTextColor: #eee,
    darkTextColor: #333
  ), $options);

  $light-text-color: map_get($options, lightTextColor);
  $dark-text-color: map_get($options, darkTextColor);
  $tab-fg-color: lighten($light-text-color, 10%);
  $fgColor: pick-visible-color($backgroundColor, $dark-text-color, $tab-fg-color);

  /deep/ ngx-panes {
    .tab.active {
      background: $primaryColor;
      color: pick-visible-color($primaryColor, $dark-text-color, $tab-fg-color);
    }
    .tabs {
      background: darken($backgroundColor, map-get($options, tabsContrast));
      color: $fgColor;
    }
    .header {
      $bg: darken($backgroundColor, map-get($options, headerContrast));
      background: $bg;
      color: pick-visible-color($bg, $dark-text-color, $light-text-color);
    }
    .wrapper {
      background: $backgroundColor;
      color: pick-visible-color($backgroundColor, $dark-text-color, $light-text-color);
    }
    .tabs, .header, .wrapper {
      border-color: transparentize($fgColor, 1 - decimalize(map-get($options, borderContrast))) !important;
    }
  }
}
