// TODO: create a more abstract versions of mixins below which accepts alignment as parameter

@mixin if-inside-left-aligned-pane {
  .left & {
    @content;
  }
}

@mixin if-inside-right-aligned-pane {
  .right & {
    @content;
  }
}

@mixin if-inside-top-aligned-pane {
  .top & {
    @content;
  }
}

@mixin if-inside-bottom-aligned-pane {
  .bottom & {
    @content;
  }
}

@mixin if-inside-horizontal-pane {
  .right &, .left & {
    @content;
  }
}

@mixin if-inside-vertical-pane {
  .top &, .bottom & {
    @content;
  }
}

@mixin if-inside-start-aligned-pane {
  .start & {
    @content;
  }
}

@mixin if-inside-end-aligned-pane {
  .end & {
    @content;
  }
}

@mixin if-left-aligned {
  &.left {
    @content;
  }
}

@mixin if-right-aligned {
  &.right {
    @content;
  }
}

@mixin if-top-aligned {
  &.top {
    @content;
  }
}

@mixin if-bottom-aligned {
  &.bottom {
    @content;
  }
}

@mixin if-horizontal {
  &.left, &.right {
    @content;
  }
}

@mixin if-vertical {
  &.top, &.bottom {
    @content;
  }
}

@mixin if-open {
  &.open {
    @content;
  }
}

@mixin if-inside-open-panes {
  .open & {
    @content
  }
}

@mixin if-inside-close-panes {
  :not(.open) & {
    @content
  }
}
