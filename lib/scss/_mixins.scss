// TODO: create a more abstract versions of mixins below which accepts alignment as parameter

@mixin if-inside-left-aligned-pane {
  .wrapper.left & {
    @content;
  }
}

@mixin if-inside-right-aligned-pane {
  .wrapper.right & {
    @content;
  }
}

@mixin if-inside-top-aligned-pane {
  .wrapper.top & {
    @content;
  }
}

@mixin if-inside-bottom-aligned-pane {
  .wrapper.bottom & {
    @content;
  }
}

@mixin if-inside-horizontal-pane {
  .wrapper.right &, .wrapper.left & {
    @content;
  }
}

@mixin if-inside-vertical-pane {
  .wrapper.top &, .wrapper.bottom & {
    @content;
  }
}

@mixin if-inside-start-aligned-pane {
  .wrapper.start & {
    @content;
  }
}

@mixin if-inside-end-aligned-pane {
  .wrapper.end & {
    @content;
  }
}

@mixin if-left-aligned {
  &.left {
    @content;
  }
}

@mixin if-right-aligned {
  &.right {
    @content;
  }
}

@mixin if-top-aligned {
  &.top {
    @content;
  }
}

@mixin if-bottom-aligned {
  &.bottom {
    @content;
  }
}

@mixin if-horizontal {
  &.left, &.right {
    @content;
  }
}

@mixin if-vertical {
  &.top, &.bottom {
    @content;
  }
}

@mixin if-open {
  &.open {
    @content;
  }
}

@mixin if-inside-open-panes {
  .wrapper.open & {
    @content
  }
}

@mixin if-inside-close-panes {
  .wrapper:not(.open) & {
    @content
  }
}
