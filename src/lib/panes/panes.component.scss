@import '../scss/mixins';
@import '../scss/functions/pick-visible-color';
$border: 1px solid rgba(0, 0, 0, .1);
$light-text-color: #eee;
$dark-text-color: #333;

@mixin panes-theme($color-primary, $color-background){
  $tab-fg-color: lighten($light-text-color, 10%);
  .tab.active{
    background: $color-primary;
    color: pick-visible-color($color-primary, $dark-text-color, $tab-fg-color);
  }
  .tabs{
    background: $color-background;
    color: pick-visible-color($color-background, $dark-text-color, $tab-fg-color);
  }
  .header{
    $bg: darken($color-background, 5%);
    background: $bg;
    color: pick-visible-color($bg, $dark-text-color, $light-text-color);
  }
  .wrapper{
    background: lighten($color-background, 7%);
    color: pick-visible-color($color-background, $dark-text-color, $light-text-color);
  }
}

@include panes-theme(#4756bf, #e9e9e9); // TODO: create a theming structure

.tabs {
  width: 22px;
  line-height: 22px;
  overflow: hidden;
  @include inside-end-aligned-pane{
    order: 1;
  }
  @include inside-left-aligned-pane{
    border-right: $border;
  }
  @include inside-right-aligned-pane{
    border-left: $border;
  }
}

.tab {
  padding: 10px 0;
  cursor: pointer;
  user-select: none;
  direction: ltr;
  &:not(.active):hover{
    background: rgba(0,0,0,.1);
  }
}

.rotated {
  display: inline-block;
  white-space: nowrap;
  transform-origin: center;
  &::before{
    content: " ";
    float: left;
    margin-top: 100%;
  }
  @include inside-left-aligned-pane {
    transform: rotate(-90deg);
    /*
    ┌────────┐                  ┌────────┐
    │^^^^^^^^│                  │<       │
    │        │  rotate(-90deg)  │<       │     ✅
    │        │        =>        │<       │
    └────────┘                  └────────┘
  */
  }
  @include inside-right-aligned-pane {
    transform: rotate(90deg);
    /*
    ┌────────┐                  ┌────────┐
    │^^^^^^^^│                  │       >│
    │        │  rotate(90deg)   │       >│      X
    │        │        =>        │       >│
    └────────┘                  └────────┘
    */

    /*
    The following commented solution is nice but it's not cross-browser (at least it doesn't work in Firefox).
    ┌────────┐                          ┌────────┐                  ┌────────┐
    │^^^^^^^^│  display: inline-flex;   │        │                  │>       │
    │        │  align-items: flex-end;  │        │ rotate(-90deg)   │>       │     ✅
    │        │        =>                │^^^^^^^^│       =>         │>       │
    └────────┘                          └────────┘                  └────────┘
    */
    /*
    display: inline-flex;
    align-items: flex-end;
    */

    // The following solution works in all browsers, but relays on line-height
    transform: rotate(90deg) translateY(100%);
    position: relative;
    left: 23px;
  }
}

.wrapper {
  height: 100%;
  @include if-left-aligned {
    border-right: $border;
    @extend %border-right-shadow;
  }
  @include if-right-aligned {
    border-left: $border;
    @extend %border-left-shadow;
  }
}

.content-wrapper {
  overflow: auto;
}

.content-container {
  overflow: hidden;
}

.header {
  padding: 3px 5px;
  border-bottom: $border;
  @extend %border-bottom-shadow;
}

ngx-pane-resizer {
  $resizer-length: 6px;
  position: absolute;
  @include inside-horizontal-pane {
    top: 0;
    bottom: 0;
    width: $resizer-length;
  }
  @include inside-left-aligned-pane {
    cursor: e-resize;
    left: 100%;
    margin-left: -$resizer-length/2;
  }
  @include inside-right-aligned-pane {
    cursor: w-resize;
    right: 100%;
    margin-right: -$resizer-length/2;
  }
  // TODO: handle vertical
}
